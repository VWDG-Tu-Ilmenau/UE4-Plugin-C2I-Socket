// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageC2I_to_Dispatcher.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageC2I_to_Dispatcher.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace c2ipb {
class Call_EventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Call_Event>
     _instance;
  ::google::protobuf::int32 val_int_;
  float val_float_;
  ::google::protobuf::internal::ArenaStringPtr val_string_;
} _Call_Event_default_instance_;
class CallDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Call>
     _instance;
} _Call_default_instance_;

namespace protobuf_MessageC2I_5fto_5fDispatcher_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call_Event, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call_Event, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call_Event, eventname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call_Event, eventtype_),
  offsetof(Call_EventDefaultTypeInternal, val_int_),
  offsetof(Call_EventDefaultTypeInternal, val_float_),
  offsetof(Call_EventDefaultTypeInternal, val_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call_Event, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call, targetcomponent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call, targetcommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Call, event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Call_Event)},
  { 12, -1, sizeof(Call)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Call_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Call_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MessageC2I_to_Dispatcher.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Call_Event_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Call_Event_default_instance_);_Call_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Call_default_instance_);_Call_Event_default_instance_.val_int_ = 0;
  _Call_Event_default_instance_.val_float_ = 0;
  _Call_Event_default_instance_.val_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _Call_default_instance_._instance.get_mutable()->event_ = const_cast< ::c2ipb::Call_Event*>(
      ::c2ipb::Call_Event::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036MessageC2I_to_Dispatcher.proto\022\005c2ipb\""
      "\262\002\n\004Call\022\027\n\017targetComponent\030\001 \001(\t\022\025\n\rtar"
      "getCommand\030\002 \001(\t\022 \n\005event\030\t \001(\0132\021.c2ipb."
      "Call.Event\032\327\001\n\005Event\022\r\n\005index\030\003 \001(\005\022\021\n\te"
      "ventName\030\004 \001(\t\022.\n\teventType\030\005 \001(\0162\033.c2ip"
      "b.Call.Event.EventType\022\021\n\007val_int\030\006 \001(\005H"
      "\000\022\023\n\tval_float\030\007 \001(\002H\000\022\024\n\nval_string\030\010 \001"
      "(\tH\000\"5\n\tEventType\022\r\n\tTYPEFLOAT\020\000\022\014\n\010TYPE"
      "CALL\020\001\022\013\n\007TYPEINT\020\002B\007\n\005valueb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 356);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageC2I_to_Dispatcher.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_MessageC2I_5fto_5fDispatcher_2eproto

const ::google::protobuf::EnumDescriptor* Call_Event_EventType_descriptor() {
  protobuf_MessageC2I_5fto_5fDispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageC2I_5fto_5fDispatcher_2eproto::file_level_enum_descriptors[0];
}
bool Call_Event_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Call_Event_EventType Call_Event::TYPEFLOAT;
const Call_Event_EventType Call_Event::TYPECALL;
const Call_Event_EventType Call_Event::TYPEINT;
const Call_Event_EventType Call_Event::EventType_MIN;
const Call_Event_EventType Call_Event::EventType_MAX;
const int Call_Event::EventType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Call_Event::kIndexFieldNumber;
const int Call_Event::kEventNameFieldNumber;
const int Call_Event::kEventTypeFieldNumber;
const int Call_Event::kValIntFieldNumber;
const int Call_Event::kValFloatFieldNumber;
const int Call_Event::kValStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Call_Event::Call_Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageC2I_5fto_5fDispatcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2ipb.Call.Event)
}
Call_Event::Call_Event(const Call_Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.eventname().size() > 0) {
    eventname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eventname_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&eventtype_) -
    reinterpret_cast<char*>(&index_)) + sizeof(eventtype_));
  clear_has_value();
  switch (from.value_case()) {
    case kValInt: {
      set_val_int(from.val_int());
      break;
    }
    case kValFloat: {
      set_val_float(from.val_float());
      break;
    }
    case kValString: {
      set_val_string(from.val_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:c2ipb.Call.Event)
}

void Call_Event::SharedCtor() {
  eventname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eventtype_) -
      reinterpret_cast<char*>(&index_)) + sizeof(eventtype_));
  clear_has_value();
  _cached_size_ = 0;
}

Call_Event::~Call_Event() {
  // @@protoc_insertion_point(destructor:c2ipb.Call.Event)
  SharedDtor();
}

void Call_Event::SharedDtor() {
  eventname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void Call_Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Call_Event::descriptor() {
  protobuf_MessageC2I_5fto_5fDispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageC2I_5fto_5fDispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Call_Event& Call_Event::default_instance() {
  protobuf_MessageC2I_5fto_5fDispatcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

Call_Event* Call_Event::New(::google::protobuf::Arena* arena) const {
  Call_Event* n = new Call_Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Call_Event::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:c2ipb.Call.Event)
  switch (value_case()) {
    case kValInt: {
      // No need to clear
      break;
    }
    case kValFloat: {
      // No need to clear
      break;
    }
    case kValString: {
      value_.val_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Call_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:c2ipb.Call.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eventtype_) -
      reinterpret_cast<char*>(&index_)) + sizeof(eventtype_));
  clear_value();
  _internal_metadata_.Clear();
}

bool Call_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2ipb.Call.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string eventName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eventname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->eventname().data(), static_cast<int>(this->eventname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "c2ipb.Call.Event.eventName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .c2ipb.Call.Event.EventType eventType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::c2ipb::Call_Event_EventType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 val_int = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.val_int_)));
          set_has_val_int();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float val_float = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.val_float_)));
          set_has_val_float();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string val_string = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->val_string().data(), static_cast<int>(this->val_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "c2ipb.Call.Event.val_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2ipb.Call.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2ipb.Call.Event)
  return false;
#undef DO_
}

void Call_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2ipb.Call.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  // string eventName = 4;
  if (this->eventname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eventname().data(), static_cast<int>(this->eventname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "c2ipb.Call.Event.eventName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->eventname(), output);
  }

  // .c2ipb.Call.Event.EventType eventType = 5;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->eventtype(), output);
  }

  // int32 val_int = 6;
  if (has_val_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->val_int(), output);
  }

  // float val_float = 7;
  if (has_val_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->val_float(), output);
  }

  // string val_string = 8;
  if (has_val_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->val_string().data(), static_cast<int>(this->val_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "c2ipb.Call.Event.val_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->val_string(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:c2ipb.Call.Event)
}

::google::protobuf::uint8* Call_Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:c2ipb.Call.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  // string eventName = 4;
  if (this->eventname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eventname().data(), static_cast<int>(this->eventname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "c2ipb.Call.Event.eventName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->eventname(), target);
  }

  // .c2ipb.Call.Event.EventType eventType = 5;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->eventtype(), target);
  }

  // int32 val_int = 6;
  if (has_val_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->val_int(), target);
  }

  // float val_float = 7;
  if (has_val_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->val_float(), target);
  }

  // string val_string = 8;
  if (has_val_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->val_string().data(), static_cast<int>(this->val_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "c2ipb.Call.Event.val_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->val_string(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2ipb.Call.Event)
  return target;
}

size_t Call_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c2ipb.Call.Event)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string eventName = 4;
  if (this->eventname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->eventname());
  }

  // int32 index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // .c2ipb.Call.Event.EventType eventType = 5;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  switch (value_case()) {
    // int32 val_int = 6;
    case kValInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_int());
      break;
    }
    // float val_float = 7;
    case kValFloat: {
      total_size += 1 + 4;
      break;
    }
    // string val_string = 8;
    case kValString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Call_Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c2ipb.Call.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Call_Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Call_Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c2ipb.Call.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c2ipb.Call.Event)
    MergeFrom(*source);
  }
}

void Call_Event::MergeFrom(const Call_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c2ipb.Call.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eventname().size() > 0) {

    eventname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eventname_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  switch (from.value_case()) {
    case kValInt: {
      set_val_int(from.val_int());
      break;
    }
    case kValFloat: {
      set_val_float(from.val_float());
      break;
    }
    case kValString: {
      set_val_string(from.val_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Call_Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c2ipb.Call.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Call_Event::CopyFrom(const Call_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c2ipb.Call.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Call_Event::IsInitialized() const {
  return true;
}

void Call_Event::Swap(Call_Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Call_Event::InternalSwap(Call_Event* other) {
  using std::swap;
  eventname_.Swap(&other->eventname_);
  swap(index_, other->index_);
  swap(eventtype_, other->eventtype_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Call_Event::GetMetadata() const {
  protobuf_MessageC2I_5fto_5fDispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageC2I_5fto_5fDispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Call_Event

// int32 index = 3;
void Call_Event::clear_index() {
  index_ = 0;
}
::google::protobuf::int32 Call_Event::index() const {
  // @@protoc_insertion_point(field_get:c2ipb.Call.Event.index)
  return index_;
}
void Call_Event::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:c2ipb.Call.Event.index)
}

// string eventName = 4;
void Call_Event::clear_eventname() {
  eventname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Call_Event::eventname() const {
  // @@protoc_insertion_point(field_get:c2ipb.Call.Event.eventName)
  return eventname_.GetNoArena();
}
void Call_Event::set_eventname(const ::std::string& value) {
  
  eventname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2ipb.Call.Event.eventName)
}
#if LANG_CXX11
void Call_Event::set_eventname(::std::string&& value) {
  
  eventname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2ipb.Call.Event.eventName)
}
#endif
void Call_Event::set_eventname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  eventname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2ipb.Call.Event.eventName)
}
void Call_Event::set_eventname(const char* value, size_t size) {
  
  eventname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2ipb.Call.Event.eventName)
}
::std::string* Call_Event::mutable_eventname() {
  
  // @@protoc_insertion_point(field_mutable:c2ipb.Call.Event.eventName)
  return eventname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Call_Event::release_eventname() {
  // @@protoc_insertion_point(field_release:c2ipb.Call.Event.eventName)
  
  return eventname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Call_Event::set_allocated_eventname(::std::string* eventname) {
  if (eventname != NULL) {
    
  } else {
    
  }
  eventname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eventname);
  // @@protoc_insertion_point(field_set_allocated:c2ipb.Call.Event.eventName)
}

// .c2ipb.Call.Event.EventType eventType = 5;
void Call_Event::clear_eventtype() {
  eventtype_ = 0;
}
::c2ipb::Call_Event_EventType Call_Event::eventtype() const {
  // @@protoc_insertion_point(field_get:c2ipb.Call.Event.eventType)
  return static_cast< ::c2ipb::Call_Event_EventType >(eventtype_);
}
void Call_Event::set_eventtype(::c2ipb::Call_Event_EventType value) {
  
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:c2ipb.Call.Event.eventType)
}

// int32 val_int = 6;
bool Call_Event::has_val_int() const {
  return value_case() == kValInt;
}
void Call_Event::set_has_val_int() {
  _oneof_case_[0] = kValInt;
}
void Call_Event::clear_val_int() {
  if (has_val_int()) {
    value_.val_int_ = 0;
    clear_has_value();
  }
}
::google::protobuf::int32 Call_Event::val_int() const {
  // @@protoc_insertion_point(field_get:c2ipb.Call.Event.val_int)
  if (has_val_int()) {
    return value_.val_int_;
  }
  return 0;
}
void Call_Event::set_val_int(::google::protobuf::int32 value) {
  if (!has_val_int()) {
    clear_value();
    set_has_val_int();
  }
  value_.val_int_ = value;
  // @@protoc_insertion_point(field_set:c2ipb.Call.Event.val_int)
}

// float val_float = 7;
bool Call_Event::has_val_float() const {
  return value_case() == kValFloat;
}
void Call_Event::set_has_val_float() {
  _oneof_case_[0] = kValFloat;
}
void Call_Event::clear_val_float() {
  if (has_val_float()) {
    value_.val_float_ = 0;
    clear_has_value();
  }
}
float Call_Event::val_float() const {
  // @@protoc_insertion_point(field_get:c2ipb.Call.Event.val_float)
  if (has_val_float()) {
    return value_.val_float_;
  }
  return 0;
}
void Call_Event::set_val_float(float value) {
  if (!has_val_float()) {
    clear_value();
    set_has_val_float();
  }
  value_.val_float_ = value;
  // @@protoc_insertion_point(field_set:c2ipb.Call.Event.val_float)
}

// string val_string = 8;
bool Call_Event::has_val_string() const {
  return value_case() == kValString;
}
void Call_Event::set_has_val_string() {
  _oneof_case_[0] = kValString;
}
void Call_Event::clear_val_string() {
  if (has_val_string()) {
    value_.val_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& Call_Event::val_string() const {
  // @@protoc_insertion_point(field_get:c2ipb.Call.Event.val_string)
  if (has_val_string()) {
    return value_.val_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void Call_Event::set_val_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:c2ipb.Call.Event.val_string)
  if (!has_val_string()) {
    clear_value();
    set_has_val_string();
    value_.val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2ipb.Call.Event.val_string)
}
#if LANG_CXX11
void Call_Event::set_val_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:c2ipb.Call.Event.val_string)
  if (!has_val_string()) {
    clear_value();
    set_has_val_string();
    value_.val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.val_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2ipb.Call.Event.val_string)
}
#endif
void Call_Event::set_val_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_val_string()) {
    clear_value();
    set_has_val_string();
    value_.val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2ipb.Call.Event.val_string)
}
void Call_Event::set_val_string(const char* value, size_t size) {
  if (!has_val_string()) {
    clear_value();
    set_has_val_string();
    value_.val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2ipb.Call.Event.val_string)
}
::std::string* Call_Event::mutable_val_string() {
  if (!has_val_string()) {
    clear_value();
    set_has_val_string();
    value_.val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:c2ipb.Call.Event.val_string)
  return value_.val_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Call_Event::release_val_string() {
  // @@protoc_insertion_point(field_release:c2ipb.Call.Event.val_string)
  if (has_val_string()) {
    clear_has_value();
    return value_.val_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void Call_Event::set_allocated_val_string(::std::string* val_string) {
  if (!has_val_string()) {
    value_.val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (val_string != NULL) {
    set_has_val_string();
    value_.val_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        val_string);
  }
  // @@protoc_insertion_point(field_set_allocated:c2ipb.Call.Event.val_string)
}

bool Call_Event::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void Call_Event::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
Call_Event::ValueCase Call_Event::value_case() const {
  return Call_Event::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Call::kTargetComponentFieldNumber;
const int Call::kTargetCommandFieldNumber;
const int Call::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Call::Call()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageC2I_5fto_5fDispatcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2ipb.Call)
}
Call::Call(const Call& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetcomponent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.targetcomponent().size() > 0) {
    targetcomponent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetcomponent_);
  }
  targetcommand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.targetcommand().size() > 0) {
    targetcommand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetcommand_);
  }
  if (from.has_event()) {
    event_ = new ::c2ipb::Call_Event(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:c2ipb.Call)
}

void Call::SharedCtor() {
  targetcomponent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetcommand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_ = NULL;
  _cached_size_ = 0;
}

Call::~Call() {
  // @@protoc_insertion_point(destructor:c2ipb.Call)
  SharedDtor();
}

void Call::SharedDtor() {
  targetcomponent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetcommand_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete event_;
}

void Call::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Call::descriptor() {
  protobuf_MessageC2I_5fto_5fDispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageC2I_5fto_5fDispatcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Call& Call::default_instance() {
  protobuf_MessageC2I_5fto_5fDispatcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

Call* Call::New(::google::protobuf::Arena* arena) const {
  Call* n = new Call;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Call::Clear() {
// @@protoc_insertion_point(message_clear_start:c2ipb.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetcomponent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetcommand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  _internal_metadata_.Clear();
}

bool Call::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2ipb.Call)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string targetComponent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetcomponent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetcomponent().data(), static_cast<int>(this->targetcomponent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "c2ipb.Call.targetComponent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string targetCommand = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetcommand()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetcommand().data(), static_cast<int>(this->targetcommand().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "c2ipb.Call.targetCommand"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .c2ipb.Call.Event event = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2ipb.Call)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2ipb.Call)
  return false;
#undef DO_
}

void Call::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2ipb.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string targetComponent = 1;
  if (this->targetcomponent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetcomponent().data(), static_cast<int>(this->targetcomponent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "c2ipb.Call.targetComponent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->targetcomponent(), output);
  }

  // string targetCommand = 2;
  if (this->targetcommand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetcommand().data(), static_cast<int>(this->targetcommand().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "c2ipb.Call.targetCommand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->targetcommand(), output);
  }

  // .c2ipb.Call.Event event = 9;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->event_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:c2ipb.Call)
}

::google::protobuf::uint8* Call::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:c2ipb.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string targetComponent = 1;
  if (this->targetcomponent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetcomponent().data(), static_cast<int>(this->targetcomponent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "c2ipb.Call.targetComponent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->targetcomponent(), target);
  }

  // string targetCommand = 2;
  if (this->targetcommand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetcommand().data(), static_cast<int>(this->targetcommand().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "c2ipb.Call.targetCommand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->targetcommand(), target);
  }

  // .c2ipb.Call.Event event = 9;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->event_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2ipb.Call)
  return target;
}

size_t Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c2ipb.Call)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string targetComponent = 1;
  if (this->targetcomponent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetcomponent());
  }

  // string targetCommand = 2;
  if (this->targetcommand().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetcommand());
  }

  // .c2ipb.Call.Event event = 9;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Call::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c2ipb.Call)
  GOOGLE_DCHECK_NE(&from, this);
  const Call* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Call>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c2ipb.Call)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c2ipb.Call)
    MergeFrom(*source);
  }
}

void Call::MergeFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c2ipb.Call)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcomponent().size() > 0) {

    targetcomponent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetcomponent_);
  }
  if (from.targetcommand().size() > 0) {

    targetcommand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetcommand_);
  }
  if (from.has_event()) {
    mutable_event()->::c2ipb::Call_Event::MergeFrom(from.event());
  }
}

void Call::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c2ipb.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Call::CopyFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c2ipb.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Call::IsInitialized() const {
  return true;
}

void Call::Swap(Call* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Call::InternalSwap(Call* other) {
  using std::swap;
  targetcomponent_.Swap(&other->targetcomponent_);
  targetcommand_.Swap(&other->targetcommand_);
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Call::GetMetadata() const {
  protobuf_MessageC2I_5fto_5fDispatcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageC2I_5fto_5fDispatcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Call

// string targetComponent = 1;
void Call::clear_targetcomponent() {
  targetcomponent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Call::targetcomponent() const {
  // @@protoc_insertion_point(field_get:c2ipb.Call.targetComponent)
  return targetcomponent_.GetNoArena();
}
void Call::set_targetcomponent(const ::std::string& value) {
  
  targetcomponent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2ipb.Call.targetComponent)
}
#if LANG_CXX11
void Call::set_targetcomponent(::std::string&& value) {
  
  targetcomponent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2ipb.Call.targetComponent)
}
#endif
void Call::set_targetcomponent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  targetcomponent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2ipb.Call.targetComponent)
}
void Call::set_targetcomponent(const char* value, size_t size) {
  
  targetcomponent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2ipb.Call.targetComponent)
}
::std::string* Call::mutable_targetcomponent() {
  
  // @@protoc_insertion_point(field_mutable:c2ipb.Call.targetComponent)
  return targetcomponent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Call::release_targetcomponent() {
  // @@protoc_insertion_point(field_release:c2ipb.Call.targetComponent)
  
  return targetcomponent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Call::set_allocated_targetcomponent(::std::string* targetcomponent) {
  if (targetcomponent != NULL) {
    
  } else {
    
  }
  targetcomponent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetcomponent);
  // @@protoc_insertion_point(field_set_allocated:c2ipb.Call.targetComponent)
}

// string targetCommand = 2;
void Call::clear_targetcommand() {
  targetcommand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Call::targetcommand() const {
  // @@protoc_insertion_point(field_get:c2ipb.Call.targetCommand)
  return targetcommand_.GetNoArena();
}
void Call::set_targetcommand(const ::std::string& value) {
  
  targetcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2ipb.Call.targetCommand)
}
#if LANG_CXX11
void Call::set_targetcommand(::std::string&& value) {
  
  targetcommand_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2ipb.Call.targetCommand)
}
#endif
void Call::set_targetcommand(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  targetcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2ipb.Call.targetCommand)
}
void Call::set_targetcommand(const char* value, size_t size) {
  
  targetcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2ipb.Call.targetCommand)
}
::std::string* Call::mutable_targetcommand() {
  
  // @@protoc_insertion_point(field_mutable:c2ipb.Call.targetCommand)
  return targetcommand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Call::release_targetcommand() {
  // @@protoc_insertion_point(field_release:c2ipb.Call.targetCommand)
  
  return targetcommand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Call::set_allocated_targetcommand(::std::string* targetcommand) {
  if (targetcommand != NULL) {
    
  } else {
    
  }
  targetcommand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetcommand);
  // @@protoc_insertion_point(field_set_allocated:c2ipb.Call.targetCommand)
}

// .c2ipb.Call.Event event = 9;
bool Call::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
void Call::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) delete event_;
  event_ = NULL;
}
const ::c2ipb::Call_Event& Call::event() const {
  const ::c2ipb::Call_Event* p = event_;
  // @@protoc_insertion_point(field_get:c2ipb.Call.event)
  return p != NULL ? *p : *reinterpret_cast<const ::c2ipb::Call_Event*>(
      &::c2ipb::_Call_Event_default_instance_);
}
::c2ipb::Call_Event* Call::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::c2ipb::Call_Event;
  }
  // @@protoc_insertion_point(field_mutable:c2ipb.Call.event)
  return event_;
}
::c2ipb::Call_Event* Call::release_event() {
  // @@protoc_insertion_point(field_release:c2ipb.Call.event)
  
  ::c2ipb::Call_Event* temp = event_;
  event_ = NULL;
  return temp;
}
void Call::set_allocated_event(::c2ipb::Call_Event* event) {
  delete event_;
  event_ = event;
  if (event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:c2ipb.Call.event)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace c2ipb

// @@protoc_insertion_point(global_scope)
